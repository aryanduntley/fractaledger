{
  "bitcoin": [
    {
      "name": "btc_wallet_1",
      "network": "mainnet",
      "walletAddress": "bc1q...",
      "secretEnvVar": "BTC_WALLET_1_SECRET",
      "transceiver": {
        "method": "callback",
        "callbackModule": "./transceivers/spv-transceiver.js",
        "config": {
          "blockchain": "bitcoin",
          "network": "mainnet",
          "server": "electrum.blockstream.info",
          "port": 50002,
          "protocol": "ssl",
          "monitoringInterval": 60000,
          "autoMonitor": true
        }
      }
    },
    {
      "name": "btc_wallet_2",
      "network": "mainnet",
      "walletAddress": "bc1q...",
      "secretEnvVar": "BTC_WALLET_2_SECRET",
      "transceiver": {
        "method": "event"
      }
    },
    {
      "name": "btc_wallet_3",
      "network": "mainnet",
      "walletAddress": "bc1q...",
      "secretEnvVar": "BTC_WALLET_3_SECRET",
      "transceiver": {
        "method": "api"
      }
    }
  ],
  "litecoin": [
    {
      "name": "ltc_wallet_1",
      "network": "mainnet",
      "walletAddress": "ltc1q...",
      "secretEnvVar": "LTC_WALLET_1_SECRET",
      "transceiver": {
        "method": "callback",
        "callbackModule": "./transceivers/spv-transceiver.js",
        "config": {
          "blockchain": "litecoin",
          "network": "mainnet",
          "server": "electrum-ltc.bysh.me",
          "port": 50002,
          "protocol": "ssl",
          "monitoringInterval": 60000,
          "autoMonitor": true
        }
      }
    },
    {
      "name": "ltc_wallet_2",
      "network": "mainnet",
      "walletAddress": "ltc1q...",
      "secretEnvVar": "LTC_WALLET_2_SECRET",
      "transceiver": {
        "method": "event"
      }
    },
    {
      "name": "ltc_wallet_3",
      "network": "mainnet",
      "walletAddress": "ltc1q...",
      "secretEnvVar": "LTC_WALLET_3_SECRET",
      "transceiver": {
        "method": "api"
      }
    }
  ],
  "dogecoin": [
    {
      "name": "doge_wallet_1",
      "network": "mainnet",
      "walletAddress": "D...",
      "secretEnvVar": "DOGE_WALLET_1_SECRET",
      "transceiver": {
        "method": "callback",
        "callbackModule": "./transceivers/spv-transceiver.js",
        "config": {
          "blockchain": "dogecoin",
          "network": "mainnet",
          "server": "electrum.dogecoin.com",
          "port": 50002,
          "protocol": "ssl",
          "monitoringInterval": 60000,
          "autoMonitor": true
        }
      }
    },
    {
      "name": "doge_wallet_2",
      "network": "mainnet",
      "walletAddress": "D...",
      "secretEnvVar": "DOGE_WALLET_2_SECRET",
      "transceiver": {
        "method": "event"
      }
    },
    {
      "name": "doge_wallet_3",
      "network": "mainnet",
      "walletAddress": "D...",
      "secretEnvVar": "DOGE_WALLET_3_SECRET",
      "transceiver": {
        "method": "api"
      }
    }
  ],
  "hyperledger": {
    "connectionProfilePath": "./connection-profile.json",
    "channelName": "fractaledger-channel",
    "chaincodeName": "fractaledger-chaincode",
    "mspId": "Org1MSP",
    "walletPath": "./wallet",
    "caUrl": "https://localhost:7054",
    "caName": "ca.org1.example.com",
    "adminUserId": "admin",
    "adminUserSecret": "adminpw",
    "userId": "appUser",
    "tlsEnabled": true,
    "tlsCertPath": "./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt",
    "peerEndpoint": "localhost:7051",
    "peerHostname": "peer0.org1.example.com",
    "ordererEndpoint": "localhost:7050",
    "ordererHostname": "orderer.example.com",
    "ordererTlsCertPath": "./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt",
    "discovery": {
      "enabled": true,
      "asLocalhost": true
    },
    "eventHandling": {
      "commitTimeout": 300,
      "endorsementTimeout": 30,
      "blockEventListenerEnabled": true
    }
  },
  "api": {
    "port": 3000,
    "host": "localhost",
    "cors": {
      "origin": "*",
      "methods": ["GET", "POST", "PUT", "DELETE"],
      "allowedHeaders": ["Content-Type", "Authorization"]
    },
    "auth": {
      "jwtSecret": "JWT_SECRET",
      "expiresIn": "1d"
    },
    "rateLimiting": {
      "windowMs": 900000,
      "max": 100
    },
    "endpoints": {
      "chaincodeManagement": {
        "enabled": false,
        "description": "When enabled, allows chaincode management via API endpoints. Default is false for security reasons."
      },
      "transactions": {
        "enabled": true,
        "description": "When enabled, provides API endpoints for retrieving and broadcasting transactions."
      },
      "monitoring": {
        "enabled": true,
        "description": "When enabled, provides API endpoints for monitoring wallet addresses and retrieving balance information."
      }
    }
  },
  "logging": {
    "level": "info",
    "file": "./logs/fractaledger.log",
    "maxSize": "10m",
    "maxFiles": "7d"
  },
  "monitoring": {
    "interval": 60000,
    "healthCheck": {
      "enabled": true,
      "failureThreshold": 3,
      "successThreshold": 1
    },
    "alerting": {
      "enabled": false,
      "email": {
        "enabled": false,
        "recipients": ["admin@example.com"],
        "smtpServer": "smtp.example.com",
        "smtpPort": 587,
        "smtpUser": "alerts@example.com",
        "smtpPasswordEnvVar": "SMTP_PASSWORD"
      },
      "slack": {
        "enabled": false,
        "webhookUrl": "https://hooks.slack.com/services/YOUR/WEBHOOK/URL"
      }
    }
  },
  "smartContract": {
    "customizablePath": "./chaincode/custom",
    "templates": {
      "default": "./chaincode/templates/default",
      "merchantFee": "./chaincode/templates/merchant-fee",
      "employeePayment": "./chaincode/templates/employee-payment"
    }
  },
  "baseInternalWallet": {
    "namePrefix": "base_wallet_",
    "description": "Represents excess funds in the primary on-chain wallet",
    "createOnInitialization": true
  },
  "balanceReconciliation": {
    "strategy": "afterTransaction", 
    "scheduledFrequency": 3600000,
    "warningThreshold": 0.00001,
    "strictMode": false
  },
  "environment": {
    "envFilePath": "./.env"
  },
  "transceiver": {
    "defaultMethod": "return",
    "apiEndpoint": "/api/transactions",
    "eventNamespace": "transactions",
    "callbacksPath": "./transceivers",
    "monitoringInterval": 60000,
    "autoMonitor": false
  }
}
