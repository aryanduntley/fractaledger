{
  "bitcoin": [
    {
      "name": "btc_wallet_1",
      "connectionType": "spv",
      "connectionDetails": {
        "server": "electrum.blockstream.info:50002",
        "network": "mainnet"
      },
      "walletAddress": "bc1q...",
      "secretEnvVar": "BTC_WALLET_1_SECRET",
      "transceiver": {
        "method": "callback",
        "module": "./transceivers/spv-transceiver.js",
        "config": {
          "blockchain": "bitcoin",
          "network": "mainnet",
          "server": "electrum.blockstream.info",
          "port": 50002,
          "protocol": "ssl",
          "monitoringInterval": 60000,
          "autoMonitor": true
        }
      }
    }
  ],
  "litecoin": [
    {
      "name": "ltc_wallet_1",
      "connectionType": "spv",
      "connectionDetails": {
        "server": "electrum-ltc.bysh.me:50002",
        "network": "mainnet"
      },
      "walletAddress": "ltc1q...",
      "secretEnvVar": "LTC_WALLET_1_SECRET",
      "transceiver": {
        "method": "callback",
        "module": "./transceivers/spv-transceiver.js",
        "config": {
          "blockchain": "litecoin",
          "network": "mainnet",
          "server": "electrum-ltc.bysh.me",
          "port": 50002,
          "protocol": "ssl",
          "monitoringInterval": 60000,
          "autoMonitor": true
        }
      }
    }
  ],
  "dogecoin": [
    {
      "name": "doge_wallet_1",
      "connectionType": "spv",
      "connectionDetails": {
        "server": "electrum.dogecoin.com:50002",
        "network": "mainnet"
      },
      "walletAddress": "D...",
      "secretEnvVar": "DOGE_WALLET_1_SECRET",
      "transceiver": {
        "method": "callback",
        "module": "./transceivers/spv-transceiver.js",
        "config": {
          "blockchain": "dogecoin",
          "network": "mainnet",
          "server": "electrum.dogecoin.com",
          "port": 50002,
          "protocol": "ssl",
          "monitoringInterval": 60000,
          "autoMonitor": true
        }
      }
    }
  ],
  "hyperledger": {
    "channelName": "fractaledger-channel",
    "chaincodeName": "fractaledger-chaincode",
    "mspId": "Org1MSP",
    "peerEndpoint": "localhost:7051",
    "tlsCertPath": "./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt",
    "certPath": "./crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem",
    "keyDirectoryPath": "./crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore",
    "clientTlsCertPath": "./crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/tls/client.crt",
    "clientTlsKeyPath": "./crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/tls/client.key",
    "asLocalhost": true,
    "timeouts": {
      "evaluate": 5000,
      "endorse": 15000,
      "submit": 5000,
      "commitStatus": 60000
    }
  },
  "api": {
    "port": 3000,
    "host": "localhost",
    "cors": {
      "origin": "*",
      "methods": ["GET", "POST", "PUT", "DELETE"],
      "allowedHeaders": ["Content-Type", "Authorization"]
    },
    "auth": {
      "enabled": true,
      "jwtSecret": "JWT_SECRET_ENV_VAR",
      "expiresIn": "1d"
    },
    "rateLimiting": {
      "enabled": true,
      "windowMs": 900000,
      "max": 100
    }
  },
  "logging": {
    "level": "info",
    "file": "./logs/fractaledger.log",
    "maxSize": "10m",
    "maxFiles": "7d"
  },
  "smartContract": {
    "customizablePath": "./fractaledger/chaincode",
    "templates": {
      "default": "default",
      "merchantFee": "merchant-fee",
      "employeePayroll": "employee-payroll"
    }
  },
  "environment": {
    "envFilePath": "./.env"
  },
  "baseInternalWallet": {
    "namePrefix": "base_wallet_",
    "description": "Represents excess funds in the primary on-chain wallet",
    "createOnInitialization": true
  },
  "balanceReconciliation": {
    "strategy": "afterTransaction",
    "scheduledFrequency": 3600000,
    "warningThreshold": 0.00001,
    "strictMode": false
  }
}
